@model Booking
@{
    ViewBag.Title = "Book your trip";
}

<style>

    /* Hide all steps by default: */
    .tab-wizard {
        display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #2780e3;
        border: none;  
        border-radius: 50%;
        display: inline-block;
        opacity: 0.3;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #2780e3;
    }

</style>

<div class="row justify-content-md-center">
    <h1>@ViewBag.Title</h1>
</div>
<form asp-action="Index" id="booking">
    <div class="container">
        <div class="row justify-content-md-center">
            <div class="row-cols-lg" style="width: 30rem">
                <div class="tab-content tab-wizard" id="step1">
                    <div class="form-group">
                        <label asp-for="Boat.Name" class="control-label">Select your boat</label>
                        <select id="boat-name" asp-for="Boat.Name" class="form-control" asp-items="ViewBag.Boat"></select>
                        <span asp-validation-for="Boat" class="text-danger"></span>
                    </div>
                </div>
                <div class="tab-content tab-wizard" id="step2">
                    <div class="form-group">
                        <label asp-for="BookingLines[0].StartDate" class="control-label">Select your boat</label>
                        <input id="start-date" asp-for="BookingLines[0].StartDate" type="date" class="form-control" asp-items="ViewBag.Boat" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="BookingLines[0].StartDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BookingLines[0].EndDate" class="control-label">Select your boat</label>
                        <input id="end-date" asp-for="BookingLines[0].EndDate" type="date" class="form-control" asp-items="ViewBag.Boat" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="BookingLines[0].EndDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="tab-content tab-wizard" id="step3">
                    <button type="button" id="checkMarinaMap">TEXT</button>
                </div>

                <div style="overflow: auto;">
                    <div style="float: right;">
                        <button type="button" class="btn btn-secondary btn-lg" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                        <button type="button" class="btn btn-primary btn-lg" id="nextBtn" onclick="nextPrev(1)">Next</button>
                    </div>
                </div>
                <!-- Circles which indicates the steps of the form: -->
                <div style="text-align:center;margin-top:40px;">
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                </div>

            </div>
        </div>
    </div>
</form>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#checkMarinaMap").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateMarinaMap", "BookingFlow")',
                data:{ boatName: $("#boat-name").val() , start: $("#start-date").val(), end: $("#end-date").val() },
                dataType: "json",
                success: function (response) { alert('Success'); $("#marinas").html(`<p>${response}</p>`); console.log(response) },
                error: function () { }
            });
        });
    });

    //
    //
    //
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab-wizard");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        updateStepIndicator(n);
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab-wizard");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var valid = true;

        // Get information about the booking form
        valid = $("#booking").valid();

        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }

        return valid; // return the valid status
    }

    function updateStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}