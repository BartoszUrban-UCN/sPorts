@model WebApplication.Models.Booking
@using WebApplication.BusinessLogic.Shared;

@{
    ViewData["Title"] = "Create";
    Dictionary<int, int> availableMarinas = (Dictionary<int, int>)ViewData["AvailableMarinas"];
    ICollection<Marina> marinas = (ICollection<Marina>)ViewData["Marinas"];
}

<h1>Create</h1>

<h4>Booking</h4>
<hr />

@* Initialize Leaflet Map and set the view with Denmark's coordinates *@

<div id="mapid" style="height: 600px"></div>

<script src="~/js/leaflet_map.js"></script>
<script src="/js/leaflet_methods.js"></script>
<script>mymap.setView([56.2639, 9.5018], 7)</script>

@* End of initialization *@

@foreach (KeyValuePair<int, int> marinaNumberOfSpotsPair in availableMarinas)
{
    var marina = marinas.FirstOrDefault(marina => marina.MarinaId == marinaNumberOfSpotsPair.Key);

    if (marina.LocationId is not null)
    {
        <script>AddMarinaOnMap(@marina)</script>
    }
    else if (marina.Spots.Count > 0)
        if (marina.Spots.Any(spot => spot.LocationId != null))
        {
            WebApplication.BusinessLogic.MarinaService.CalculateMarinaLocation(marina);

            <script>AddMarinaOnMap(@Html.Raw(HelperMethods.Serialize(marina)))</script>
        }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
