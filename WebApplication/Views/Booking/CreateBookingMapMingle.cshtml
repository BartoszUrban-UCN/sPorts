@model WebApplication.Models.Booking

@{
    ViewData["Title"] = "Create";
    Dictionary<int, int> availableMarinas = (Dictionary<int, int>)ViewData["AvailableMarinas"];
    ICollection<Marina> marinas = (ICollection<Marina>)ViewData["Marinas"];
}

<h1>Create</h1>

<h4>Booking</h4>
<hr />

@* Initialize Leaflet Map and set the view with Denmark's coordinates *@

<div id="mapid" style="height: 600px"></div>

<script src="~/js/leaflet_map.js"></script>
<script>mymap.setView([56.2639, 9.5018], 7)</script>

@* End of initialization *@

@foreach (KeyValuePair<int, int> marinaNumberOfSpotsPair in availableMarinas)
{
    var marina = marinas.FirstOrDefault(marina => marina.MarinaId == marinaNumberOfSpotsPair.Key);
    if (marina.LocationId == null && marina.Spots.Count > 0)
    {
        WebApplication.BusinessLogic.MarinaService.CalculateMarinaLocation(marina);
    }

    <script>
    var marinaPopup = '\
        <div class="text-center" style="width: 100px">\
            <p style="font-weight: bold">@marina.Name</p>\
            <a href="Marina/Details/@marina.MarinaId" class="btn btn-primary text-white">Details</a>\
        </div>\
    ';

    L.circle([@marina.Location.Latitude, @marina.Location.Longitude], {
        color: 'pink',
        fillColor: '#f03',
        fillOpacity: 0.5,
        radius: @(marina.Location.Radius * 1000),
    }).bindPopup(marinaPopup).openTooltip().addTo(mymap);
    </script>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
